<?xml version="1.0" encoding="UTF-8"?>

<launch>
    <!-- ARGS AND PARAMS -->
    <!-- ======================= -->
    <!-- Gazebo args -->

    <arg name="debug" default="false" />
    <arg name="gui" default="false" />
    <arg name="verbose" default="true" />
    <arg name="paused" default="false"/>
    <!-- The world in which the robot is spawned -->
    <arg name="world" default="$(find locosigns_simulator)/worlds/road.world"/>
    <!-- The robot's description file to be loaded -->
    <param name="bot_model" textfile="$(find prius_description)/urdf/prius.urdf"/>
    <!-- Simulation parameters (in the Intarnal Unit Standard)-->
    <arg name="robot_velocity" default="10.0"/>
    <arg name="spawn_heading" default="0.0"/>
    <arg name="spawn_x" default="0.0"/>
    <arg name="spawn_y" default="0.0"/>
    <arg name="spawn_z" default="0.0"/>
    <arg name="spawn_direction" default="1"/> <!-- 1=forward; -1=backwards; follows the road direction -->
    <arg name="stdev_landmark" default="33.334"/> <!-- 1=forward; -1=backwards -->
    <arg name="landmark_detection_rate" default="0.7"/> <!-- probability of detecting the landmark-->
    <arg name="robot_sinusoidal_path_period" default="3"/> <!-- Amount of time required for the robot to complete a sine wave cycle in seconds (simulation_node and sim_landmark_detector_node) -->
    <!-- ======================= -->

    <!-- GAZEBO -->
    <!-- ======================= -->
    <!-- Include gazebo-ros magic-->
    <env name="GAZEBO_PLUGIN_PATH" value="$(find locosigns_simulator)/plugins"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch"> <!-- it is 'empty_world' no matter the world you use -->
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="verbose" value="$(arg verbose)"/>
    </include>

    <!-- Required for publishing the  -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <remap from="robot_description" to="bot_model" /> -->
    </node>
    <!-- Spawn the robot -->
    <node name="spawn_prius" pkg="gazebo_ros" type="spawn_model" output="screen" 
        args="-param bot_model -urdf -model prius -x $(arg spawn_x) -y $(arg spawn_y) -z $(arg spawn_z)" 
    />
    <!-- ======================= -->
    
    <!-- SIMULATION -->
    <!-- ======================= -->
    <!-- Global parameters for simulation -->
    <param name="direction" value="$(arg spawn_direction)"/>
    <param name="stdev_landmark" value="$(arg stdev_landmark)"/>
    <param name="path_period" value="$(arg robot_sinusoidal_path_period)"/>
    <!-- Delay between the spawning the robot and starting the simulation -->
    <arg name="node_start_delay" default="10.0" />
    <!-- Head of the simulation: moves the objects and broadcasts the robot state -->
    <node pkg="locosigns_simulator" 
        type="simulation_node.py" 
        name="simulation_node" 
        output="screen"
        launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "
    >
        <param name="x" value="$(arg spawn_x)"/>
        <param name="y" value="$(arg spawn_y)"/>
        <param name="z" value="$(arg spawn_z)"/>
        <param name="heading" value="$(arg spawn_heading)"/>
        <param name="velocity" value="$(arg robot_velocity)"/>
    </node>

    <!-- Simulation of the sensors -->
    <!-- 
    <node pkg="locosigns_simulator" type="sim_landmark_detector_node.py" name="sim_landmark_detector_node" output="screen">
        <param name="detection_rate" value="$(arg landmark_detection_rate)"/>
        <param name="amplitude" value="$(arg robot_velocity)">
    </node>
    <node pkg="locosigns_simulator" type="sim_velocimeter_node.py" name="sim_velocimeter_node"/>
    -->
    <!-- Filter -->
    <!--
    <node pkg="locosigns_filter" type="filter_node.py" name="filter_node"  output="screen" />
    -->
    <!-- ======================= -->
</launch>